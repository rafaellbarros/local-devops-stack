version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD:-admin123}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${DB_KEYCLOAK:-devops_keycloak}
      KC_DB_USERNAME: ${DB_KEYCLOAK_USER:-keycloak_user}
      KC_DB_PASSWORD: ${DB_KEYCLOAK_PASSWORD:-keycloak123}
      KC_DB_SCHEMA: public
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_METRICS_ENABLED: "true"
      KC_FEATURES: "metrics"
      KC_SPI_METRICS_MICROMETER_EXPORT_PROMETHEUS_ENABLED: "true"
      KC_SPI_METRICS_MICROMETER_EXPORT_PROMETHEUS_HOST: "0.0.0.0"
      KC_SPI_METRICS_MICROMETER_EXPORT_PROMETHEUS_PATH: "/metrics"
      KC_SPI_METRICS_MICROMETER_JVM_MEMORY_ENABLED: "true"
      KC_SPI_METRICS_MICROMETER_JVM_THREADS_ENABLED: "true"
      KC_SPI_METRICS_MICROMETER_JVM_GC_ENABLED: "true"
      KC_SPI_METRICS_MICROMETER_HTTP_ENABLED: "true"
      KC_SPI_METRICS_MICROMETER_CACHE_ENABLED: "true"
      KC_SPI_METRICS_MICROMETER_DATASOURCE_ENABLED: "true"
      JAVA_OPTS: >
        -Djava.net.preferIPv4Stack=true
        -Djboss.as.management.blocking.timeout=3600
        -Dkeycloak.metrics.enabled=true
        -Dkeycloak.metrics.prometheus.endpoint=true
        -Dkeycloak.metrics.jvm.enabled=true
        -Dkeycloak.metrics.http.enabled=true
        -Dkeycloak.metrics.cache.enabled=true
        -Dkeycloak.metrics.db.enabled=true
    volumes:
      - ./configs/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./configs/keycloak/providers:/opt/keycloak/providers
    command:
      - start-dev
      - --db-schema=public
      - --health-enabled=true
      - --http-enabled=true
      - --hostname-strict=false
      - --import-realm
      - --metrics-enabled=true
    ports:
      - "8180:8080"
    networks:
      - devops-net
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 10